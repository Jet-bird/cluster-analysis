apply from: 'libraries.gradle'
apply plugin: 'idea'

def libraries = rootProject.ext.supportDependencies

buildscript {
    repositories {
        maven { url = "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        google()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        mavenCentral()
    }
}

configurations.all{
    resolutionStrategy {
        failOnVersionConflict()
    }
}

subprojects {
    apply plugin: 'project-report'
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    repositories {
        maven { url = "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenLocal()
        google()
        jcenter()
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}



    project(':cluster-analysis-common') {
        dependencies{
            //storm包引入不完整，手动下载
            compile (libraries.storm_core){
                exclude group :'org.apache.logging.log4j'
            }
            compile libraries.fastJson
        }
    }

    project(':cluster-analysis-topology') {
        dependencies {
            compile project(':cluster-analysis-common')
            compile libraries.springFramework
            compile libraries.springBoot
            compile libraries.springBoot_tomcat
            compile libraries.log4j_api
            compile libraries.log4j_core
            compile libraries.junit_platform_common
            compile libraries.junit_platform_console
            compile libraries.junit_platform_engine
            compile libraries.junit_platform_launcher
            compile libraries.junit_platform_runner
            compile libraries.junit_jupiter_api
            compile libraries.junit_jupiter_params
            compile libraries.apiguardian
            compile libraries.opentest4j
        }
    }

    project(':cluster-analysis-worker') {
        dependencies{
            compile project(':cluster-analysis-topology')
        }
    }

    project(':cluster-analysis-webapp') {
        apply plugin: 'war'

        dependencies{
            compile project(':cluster-analysis-topology')
        }
    }







